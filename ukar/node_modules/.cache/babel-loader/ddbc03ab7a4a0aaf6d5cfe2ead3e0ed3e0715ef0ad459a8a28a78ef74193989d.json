{"ast":null,"code":"var _jsxFileName = \"D:\\\\appUkar\\\\frontend\\\\ukar\\\\src\\\\components\\\\pages\\\\ingredient\\\\ingredient.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Ingredient() {\n  _s();\n  //hooks\n  const [search, setSearch] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  //FONCTION\n  const handleSearch = e => {\n    setSearch(e.target.value);\n  };\n  const handleSearchSubmit = e => {\n    e.preventDefault();\n    const url = `http://localhost:8000/api/search?nomIngred=${search}`;\n    axios.get(url).then(response => {\n      // Gestion de la réponse du serveur\n      console.log(response.data);\n      // Ici, vous pouvez mettre en œuvre la logique pour traiter les résultats de la recherche\n    }).catch(error => {\n      // Gestion des erreurs en cas d'échec de la requête\n      console.error('Erreur lors de la recherche:', error);\n      // Vous pouvez afficher un message d'erreur à l'utilisateur ou prendre d'autres mesures nécessaires\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Ingr\\xE9dients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: search,\n          onChange: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"\",\n          value: \"OK\",\n          onSubmit: handleSearchSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(Ingredient, \"dT8zO2eqVJIg7JEQKAiVVq5mqIE=\");\n_c = Ingredient;\nexport default Ingredient;\nvar _c;\n$RefreshReg$(_c, \"Ingredient\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Ingredient","_s","search","setSearch","searchResults","setSearchResults","handleSearch","e","target","value","handleSearchSubmit","preventDefault","url","get","then","response","console","log","data","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onSubmit","_c","$RefreshReg$"],"sources":["D:/appUkar/frontend/ukar/src/components/pages/ingredient/ingredient.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios'\r\n\r\nfunction Ingredient() {\r\n    //hooks\r\n    const [search, setSearch] = useState('');\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    //FONCTION\r\n    const handleSearch = (e) => {\r\n        setSearch(e.target.value);\r\n    };\r\n\r\n    const handleSearchSubmit = (e) => {\r\n        e.preventDefault();\r\n        const url = `http://localhost:8000/api/search?nomIngred=${search}`;\r\n        axios.get(url)\r\n        .then(response => {\r\n            // Gestion de la réponse du serveur\r\n            console.log(response.data);\r\n            // Ici, vous pouvez mettre en œuvre la logique pour traiter les résultats de la recherche\r\n        })\r\n        .catch(error => {\r\n            // Gestion des erreurs en cas d'échec de la requête\r\n            console.error('Erreur lors de la recherche:', error);\r\n            // Vous pouvez afficher un message d'erreur à l'utilisateur ou prendre d'autres mesures nécessaires\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <span>\r\n                <h1>Ingrédients</h1>\r\n                <form >\r\n                    <input type=\"text\" value={search} onChange={handleSearch}/>\r\n                    <input type=\"\" value=\"OK\" onSubmit={handleSearchSubmit}/>\r\n                </form>\r\n            </span>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Ingredient;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtD;EACA,MAAMU,YAAY,GAAIC,CAAC,IAAK;IACxBJ,SAAS,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMC,kBAAkB,GAAIH,CAAC,IAAK;IAC9BA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,MAAMC,GAAG,GAAI,8CAA6CV,MAAO,EAAC;IAClEL,KAAK,CAACgB,GAAG,CAACD,GAAG,CAAC,CACbE,IAAI,CAACC,QAAQ,IAAI;MACd;MACAC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;MAC1B;IACJ,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZ;MACAJ,OAAO,CAACI,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD;IACJ,CAAC,CAAC;EACN,CAAC;EAED,oBACIrB,OAAA;IAAAsB,QAAA,eACItB,OAAA;MAAAsB,QAAA,gBACItB,OAAA;QAAAsB,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpB1B,OAAA;QAAAsB,QAAA,gBACItB,OAAA;UAAO2B,IAAI,EAAC,MAAM;UAACjB,KAAK,EAAEP,MAAO;UAACyB,QAAQ,EAAErB;QAAa;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC3D1B,OAAA;UAAO2B,IAAI,EAAC,EAAE;UAACjB,KAAK,EAAC,IAAI;UAACmB,QAAQ,EAAElB;QAAmB;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEN,CAAC;AAEd;AAACxB,EAAA,CArCQD,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AAuCnB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}