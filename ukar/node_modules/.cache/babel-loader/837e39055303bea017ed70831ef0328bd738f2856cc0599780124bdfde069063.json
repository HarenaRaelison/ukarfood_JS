{"ast":null,"code":"var _jsxFileName = \"D:\\\\appUkar\\\\frontend\\\\ukar\\\\src\\\\components\\\\pages\\\\ingredient\\\\ingredient.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Ingredient() {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const handleSearchInputChange = e => {\n    setSearchQuery(e.target.value);\n  };\n  const handleSearchSubmit = e => {\n    e.preventDefault();\n    // Ici, vous devriez implémenter la logique de recherche en utilisant la valeur de `searchQuery`\n    // Pour cet exemple, je vais simplement simuler des résultats aléatoires\n    const randomResults = Array.from({\n      length: 5\n    }, (_, index) => ({\n      id: index + 1,\n      name: `Ingredient ${index + 1}`,\n      quantity: `${Math.floor(Math.random() * 100)} grams`\n    }));\n    setSearchResults(randomResults);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearchSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search ingredients...\",\n        value: searchQuery,\n        onChange: handleSearchInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: searchResults.map(result => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: result.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: result.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: result.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this)]\n        }, result.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(Ingredient, \"jn4xHEBDfu/IrX9NjeCde/IJa08=\");\n_c = Ingredient;\nexport default Ingredient;\nvar _c;\n$RefreshReg$(_c, \"Ingredient\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Ingredient","_s","searchQuery","setSearchQuery","searchResults","setSearchResults","handleSearchInputChange","e","target","value","handleSearchSubmit","preventDefault","randomResults","Array","from","length","_","index","id","name","quantity","Math","floor","random","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","map","result","_c","$RefreshReg$"],"sources":["D:/appUkar/frontend/ukar/src/components/pages/ingredient/ingredient.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Ingredient() {\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [searchResults, setSearchResults] = useState([]);\r\n\r\n    const handleSearchInputChange = (e) => {\r\n        setSearchQuery(e.target.value);\r\n    };\r\n\r\n    const handleSearchSubmit = (e) => {\r\n        e.preventDefault();\r\n        // Ici, vous devriez implémenter la logique de recherche en utilisant la valeur de `searchQuery`\r\n        // Pour cet exemple, je vais simplement simuler des résultats aléatoires\r\n        const randomResults = Array.from({ length: 5 }, (_, index) => ({\r\n            id: index + 1,\r\n            name: `Ingredient ${index + 1}`,\r\n            quantity: `${Math.floor(Math.random() * 100)} grams`,\r\n        }));\r\n        setSearchResults(randomResults);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Ingredients</h1>\r\n            <form onSubmit={handleSearchSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search ingredients...\"\r\n                    value={searchQuery}\r\n                    onChange={handleSearchInputChange}\r\n                />\r\n                <button type=\"submit\">Search</button>\r\n            </form>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Name</th>\r\n                        <th>Quantity</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {searchResults.map((result) => (\r\n                        <tr key={result.id}>\r\n                            <td>{result.id}</td>\r\n                            <td>{result.name}</td>\r\n                            <td>{result.quantity}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Ingredient;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}